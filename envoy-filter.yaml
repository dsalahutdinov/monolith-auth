---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: monolith-auth-filter
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inlineCode: |
            function dump(o)
              if type(o) == 'table' then
                 local s = '{ '
                 for k,v in pairs(o) do
                   if type(k) ~= 'number' then k = '"'..k..'"' end
                   s = s .. '['..k..'] = ' .. dump(v) .. ','
                  end
                return s .. '} '
               else
                return tostring(o)
              end
            end

            function envoy_on_request(request_handle)
              token = request_handle:headers():get("Authorization")
              if token ~= nil then
                request_handle:headers():remove("Authorization")

                local authentication_request = {
                  [":method"] = "GET", [":path"] = "/auth",
                  [":authority"] = "lua_cluster",
                  ["authorization"] = token
                }
                local response_headers, response_body = request_handle:httpCall(
                "lua_cluster",
                authentication_request,
                "", 100
                )
                
                identity = response_headers["x-auth-identity"]
                if identity ~= nil then
                  request_handle:logErr("x-auth-identity"..identity)
                else
                  request_handle:logErr("no x-auth")
                  request_handle:logErr(dump(response_headers))
                end
              else
                return
              end
            end

            function envoy_on_response(response_handle)
              response_handle:logErr("Status: "..response_handle:headers():get(":status"))
              if response_handle:body() == nil then
                response_handle:headers():add("response_body_size", "0")
              else
                response_handle:headers():add("response_body_size", response_handle:body():length())
              end
            end

  - applyTo: CLUSTER
    match:
      context: GATEWAY
    patch:
      operation: ADD
      value: # cluster specification
        name: "lua_cluster"
        type: STRICT_DNS
        connect_timeout: 0.5s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: lua_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    protocol: TCP
                    address: "monolith.default.svc.cluster.local"
                    port_value: 9292
